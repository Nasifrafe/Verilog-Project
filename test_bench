`timescale 1ns/1ps
 module pwm_generator_tb;
 localparam R=8;
 reg clk;
 reg reset;
 reg [7:0] duty;
 wire pwm_out;
 // Instantiate the PWM generator module
 pwm_generator uut (
 .clk(clk),
.reset(reset),
 .duty(duty),
 .pwm_out(pwm_out)
 );
 // Clock generation
 initial begin
 clk = 0;
 forever #5 clk = ~clk;
 end
 // Stimulus
 initial begin
 reset = 0; // Assert reset
 duty = 8'b00000000; // Set initial duty cycle
 #10 reset = 1; // Deassert reset
 repeat(2*2**R)@(negedge clk)
 #100 duty = 0.25*(2**R); // Change duty cycle
 repeat(2*2**R)@(negedge clk)
 #100 duty = 0.5*(2**R);
 repeat(2*2**R)@(negedge clk)
 #100 duty = 0.75*(2**R);
 repeat(2*2**R)@(negedge clk)
 #100 duty = 0.9*(2**R);
 #10000 $finish; // Finish simulation after some time
 end
 initial begin
 // Dump waves
 $dumpfile("dump.vcd");
 $dumpvars(1);
 end
 endmodule
